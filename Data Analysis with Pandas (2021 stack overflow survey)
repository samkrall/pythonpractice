'''
README:

Hello everyone. I want to become a data or computer scientist. I already have a decent career and I want to figure out
if its worth my time/money and the best way to do it. I am using 2021 survey data from stack overflow to do so. Here
are the questions I am asking:

-Lets look at the 5 'biggest' coding countries and see how they compare
-What are salaries for devs compared with age in my country (America)
so I can see what I can expect to earn if i switch careers?
-Since coding can be done anywhere, how does US compare vs OUS salary (basically whats my chance of being outsourced)?
-What's the best language to learn?

'''

#importing pandas/numpy/plt

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

#reading the data and schema into dataframs in 

df = pd.read_csv('C:/Users/samdk/Desktop/data science/data/stack-overflow-developer-survey-2021/survey_results_public.csv')
df_schema = pd.read_csv('C:/Users/samdk/Desktop/data science/data/stack-overflow-developer-survey-2021/survey_results_schema.csv')
pd.set_option('display.max_columns', None)

#initial exploration
df.columns
df.shape
#Relavant columns: ConvertedCompYearly, Age, LanguageHaveWorkedWith, Country, US_State, YearsCode, YearsCodePro

#were grabbing value counts to see what countries we want to examine... (Spoiler its US, India, Germany, UK, Canada)
df['Country'].value_counts()

#Lets look at the 5 'biggest' coding countries and see how they compare? US/India/Germany/UK/Canada

#Create Group by country and explore the top 5
country_group = df.groupby(['Country'])
print(country_group['ConvertedCompYearly'].agg(['median', 'mean']).loc['United States of America'])
print()
print(country_group['ConvertedCompYearly'].agg(['median', 'mean']).loc['India'])
print()
print(country_group['ConvertedCompYearly'].agg(['median', 'mean']).loc['Germany'])
print()
print(country_group['ConvertedCompYearly'].agg(['median', 'mean']).loc['United Kingdom of Great Britain and Northern Ireland'])
print()
print(country_group['ConvertedCompYearly'].agg(['median', 'mean']).loc['Canada'])

#Since coding can be done anywhere, how does US compare vs OUS salary (basically whats my chance of being outsourced)?
#We can see that salaries differ quite alot across the top 5 countries! North America is #1, 
#followed by the west followed by India. Lets get a little mor granularity.

#I want "working age" deveLopers, so lets explore 'age' column, which is a categorical
df['Age'].unique()

#dropping under 18s, over 65s, prefer not to says
df.drop(df[df['Age'] == 'Under 18 years old'].index, inplace=True)
df.drop(df[df['Age'] == '65 years or older'].index, inplace=True)
df.drop(df[df['Age'] == 'Prefer not to say'].index, inplace=True)
df.shape

#filter for America/India/Germany/UK/Canada
country_group = df.groupby(['Country'])
df_usa = country_group.get_group('United States of America')
df_india = country_group.get_group('India')
df_germany = country_group.get_group('Germany')
df_uk = country_group.get_group('United Kingdom of Great Britain and Northern Ireland')
df_canada = country_group.get_group('Canada')

#this gives a little more granularity, displaying median by age by country
medians_usa = df_usa.groupby(['Age']).ConvertedCompYearly.median()
medians_india = df_india.groupby(['Age']).ConvertedCompYearly.median()
medians_germany = df_germany.groupby(['Age']).ConvertedCompYearly.median()
medians_uk = df_uk.groupby(['Age']).ConvertedCompYearly.median()
medians_canada = df_canada.groupby(['Age']).ConvertedCompYearly.median()

print(medians_usa)
print(medians_india)
print(medians_germany)
print(medians_uk)
print(medians_canada)

#Starting coders in USA make more than ANYONE in India and make comparable amounts to canadians, germans and britist...if you want to make $$$ move to America!

#let start looking at languages, we want to understand what languages to learn...
#Python, HTML/CSS, JavaScript
print(df['LanguageHaveWorkedWith'].str.contains('Python').sum())
print(df['LanguageHaveWorkedWith'].str.contains('JavaScript').sum())
print(df['LanguageHaveWorkedWith'].str.contains('HTML/CSS').sum())

# a little cleaning, remoing NAs before i use a lambda function to help subset data
df.dropna(subset=['LanguageHaveWorkedWith'], inplace=True)

df['python']= df['LanguageHaveWorkedWith'].apply(lambda x: 'Python' if 'Python' in x else np.nan)
df['javaScript']= df['LanguageHaveWorkedWith'].apply(lambda x: 'JavaScript' if 'JavaScript' in x else np.nan)
df['HTML/CSS']= df['LanguageHaveWorkedWith'].apply(lambda x: 'HTML/CSS' if 'HTML/CSS' in x else np.nan)

#regrab country group, were only looking at USA for languages
country_group = df.groupby(['Country'])
df_usa = country_group.get_group('United States of America')

#grabbing relevant columns
df_usa = df_usa[['python', 'javaScript', 'HTML/CSS', 'ConvertedCompYearly', 'Age']]

#subsetting the dataframe
df_usa_python = df_usa.copy()
df_usa_javascript = df_usa.copy()
df_usa_htmlcss = df_usa.copy()

#pulling only people who know python/javascript/html and css (remember to check shapes!)
df_usa_python.dropna(subset=['python'], inplace=True)
df_usa_python
df_usa_javascript.dropna(subset=['javaScript'], inplace=True)
df_usa_javascript
df_usa_htmlcss.dropna(subset=['HTML/CSS'], inplace=True)
df_usa_htmlcss

#create table of medians grouped by age/code knowledge
medians_usa_python = df_usa_python.groupby(['Age']).ConvertedCompYearly.median()
medians_usa_javascript = df_usa_javascript.groupby(['Age']).ConvertedCompYearly.median()
medians_usa_htmlcss = df_usa_htmlcss.groupby(['Age']).ConvertedCompYearly.median()

#print
print(medians_usa)
print()
print(medians_usa_python)
print()
print(medians_usa_javascript)
print()
print(medians_usa_htmlcss)

#python is the language to learn, highest medians across the board.

#Lets do some visualizations...

newdf = medians_usa_python.reset_index()

#showing a bar chart of US medians for python devs
plt.bar(newdf['index'], newdf['ConvertedCompYearly'])

#renaming converted comp to reflect 
newdf.rename(columns={'ConvertedCompYearly':'PythonMedianSalary'}, inplace=True)

#doing the same with python, CSS, and overall
javascript_medians = medians_usa_javascript.reset_index()
newdf['JavaScriptMedianSalary'] = javascript_medians['ConvertedCompYearly']
htmlcss_medians = medians_usa_htmlcss.reset_index()
newdf['htmlcssmediansalary'] = htmlcss_medians['ConvertedCompYearly']
overall_medians = medians_usa.reset_index()
newdf['US Median']=overall_medians['ConvertedCompYearly']

print(newdf)

#creating bar chart
x_indexes = np.arange(len(newdf['index']))
width = 0.2
labels = newdf['Age']
plt.bar(x_indexes-(2*width), newdf['US Median'], width=width, label='All Devs')
plt.bar(x_indexes-width, newdf['PythonMedianSalary'], width=width, label = 'Python Devs')
plt.bar(x_indexes, newdf['JavaScriptMedianSalary'], width=width, label = 'JavaScript Devs')
plt.bar(x_indexes+width, newdf['htmlcssmediansalary'], width=width, label = 'HTML/CSS Devs')
plt.title('Median Salary in America by Age')
plt.legend(loc='lower right')
plt.xticks(x_indexes, labels, rotation=60)

#in the US, python devs have a slight advantage over others.

#next we'll work on visualizing medians by country...
#reseting index on the us medians and renaming the comp column
countries_df = medians_usa.reset_index()
countries_df.rename(columns = {'ConvertedCompYearly':'United States'},inplace=True)

#wrangling other median data and adding to the country df
india_medians = medians_india.reset_index()
countries_df['India'] = india_medians['ConvertedCompYearly']
germany_medians = medians_germany.reset_index()
countries_df['Germany'] = germany_medians['ConvertedCompYearly']
uk_medians = medians_uk.reset_index()
countries_df['UK'] = uk_medians['ConvertedCompYearly']
canada_medians = medians_canada.reset_index()
countries_df['Canada'] = canada_medians['ConvertedCompYearly']

#creating a bar chart of median salaries by age for top 5 countries
x_indexes = np.arange(len(countries_df['index']))
width = 0.15
labels = countries_df['Age']
plt.bar(x_indexes-(2*width), countries_df['India'], width=width, label='India')
plt.bar(x_indexes-width, countries_df['Germany'], width=width, label = 'Germany')
plt.bar(x_indexes, countries_df['UK'], width=width, label = 'UK')
plt.bar(x_indexes+width, countries_df['Canada'], width=width, label = 'Canada')
plt.bar(x_indexes+(2*width), countries_df['United States'], width=width, label = 'US')
plt.title('Median Salary by Age')
plt.legend()
plt.xticks(x_indexes, labels, rotation=60)


'''
That all I got. This is my first time working with data after ~8 weeks of learning. Probably no one else will ever read this but it feels
REALLY REALLY good to have taught myself this in the last few weeks. Also I coded all of this in Jupyter notebooks to start and I haven't 
learned how to copy that directly to GITHUB, this code might be a little buggy, but it worked in JUPYTER!
'''

